// https://leetcode.com/problems/swap-nodes-in-pairs/description/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        
        if(head == null) {return null;}
        if(head.next == null) {return head;}

        ListNode dummyHead = new ListNode(0,head);
        ListNode current = head;
        ListNode previous = dummyHead;
        int length = getLength(head);

        for(int i =0; i <length/2;i++){
            ListNode next = current.next;
            current.next = next.next;
            next.next = current;
            previous.next = next;
            previous = current;
            current = current.next;
        }
        return dummyHead.next;
    }
    private static int getLength(ListNode head) {
        int length = 0;
        for(ListNode curr = head; curr != null; curr = curr.next)
            ++length;
        return length;
    }
    
}
